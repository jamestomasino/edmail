#!/bin/sh

# This file defines the edmail mail user agent.

# Copyright (C) 2017-2018 mlaine@sdfeu.org

# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:

# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

#-----------------------------------------------------------------------

function tint {
    if [ "$1" -gt 0 -a "$1" -le "$n" 2>'/dev/null' ]; then
        return 0
    else
        return 1
    fi
}

function list {
    n="$(find . -type f | wc -l)"
    case "$n" in
        0)
            printf '%s\n' "$dir: no messages"
            old=0
            cursor=0
            return ;;
        1)
            printf '%s\n' "$dir: $n message" ;;
        *)
            printf '%s\n' "$dir: $n messages" ;;
    esac
    if [ "$cmd" == 'l' ]; then
        old=0
    else
        old=1
        cursor=1
    fi
    c="${#n}"
    i=0
    for file in ./*; do
        ((i++))
        case "${dir##*/}" in
            'tmp'|'out')
                name="$(awk '/^To:/{print;exit}' "$file")" ;;
            *)
                name="$(awk '/^From:/{print;exit}' "$file")" ;;
        esac
        name="${name#* }"
        name="${name% <*}"
        name="${name:0:24}"
        date="$(awk '/^Date:/{print;exit}' "$file")"
        date="$(date --date="${date#* }" '+%D %H:%M')"
        subj="$(awk '/^Subject:/{print;exit}' "$file")"
        subj="${subj#* }"
        lines="$(wc -l < "$file")"
        bytes="$(wc -c < "$file")"
        if [ "$lines" -lt 1000 -a "$bytes" -lt 10000 ]; then
            size="$lines/$bytes"
        else
            size="$(du -h "$file" | cut -f1 )"
        fi
        if [ "$i" -eq "$cursor" ]; then
            printf '%s%*s %-24s %s %-8s "%.*s"\n' '->' "$c"\
                "$i" "$name" "$date" "$size" "$((26-c))" "$subj"
        else
            printf '%*s %-24s %s %-8s "%.*s"\n' "$((c+2))"\
                "$i" "$name" "$date" "$size" "$((26-c))" "$subj"
        fi
    done
}

function page {
    if [ -n "$cmd" ]; then
        cursor="$cmd"
    elif [ "$cursor" -lt "$n" ]; then
        if [ "$old" -eq 0 ]; then
            ((cursor++))
        fi
    elif [ "$cursor" -eq "$n" ]; then
        if [ "$old" -eq 0 ]; then
            printf 'EOF\n'
            return
        fi
    fi
    i=0
    for file in ./*; do
        ((i++))
        if [ "$i" -eq "$cursor" ]; then
            more "$file"
            old=0
        fi
    done
}

function comp {
    if [ "$args" ]; then
        to="$args"
    else
        printf 'To: '
        read to
    fi
    printf 'Subject: '
    read subj
    msg="$maildir/tmp/$(date +%s)-edmail@$HOSTNAME"
    ed -sp '*' "$msg"
    if [ -f "$msg" ]; then
        hdrs
    fi
}

function hdrs {
    h0="Message-ID: <${msg##*/}>"
    h1="Date: $(date '+%a, %d %b %Y %T %z')"
    h2="From: $from"
    h3="To: $to"
    h4="Subject: $subj" 
    printf '%s\n' '0a'\
        "$h0" "$h1" "$h2" "$h3" "$h4"\
        '' '.' 'w' | ed -s "$msg"
}

function dlte {
    if [ "$args" ] && ! tint "$args"; then
        printf '?\n'
        return 1
    elif [ "$n" -eq 0 ]; then
        printf 'EOF\n'
        return 0
    fi
    i=0
    for file in ./*; do
        ((i++))
        if [ "$i" -eq "$args" 2>'/dev/null'  ] ||
           [ "$i" -eq "$cursor" -a ! "$args" ]
        then
            rm "$file"
            if [ "$cursor" -eq "$n" ]; then
                ((cursor--))
            fi
            break
        fi
    done
    old=1
    n="$(find . -type f | wc -l)"
}

function send {
    if find "$maildir/tmp" -empty | read; then
        printf '%s\n' "$maildir/tmp: no messages"
        return
    fi
    i=0; j=0
    for file in "$maildir/tmp"/*; do
        ((j++))
        if cat "$file" | msmtp -t; then
            ((i++))
            mv "$file" "$maildir/out"
        else
            printf '%s\n\n' "edmail: could not send $file"
        fi
    done
    if [ "$i" -eq 0 ]; then
        printf '%s\n' "no messages sent"
    elif [ "$j" -eq 1 ]; then
        printf '%s\n' "$i/$j message successfully sent"
    else
        printf '%s\n' "$i/$j messages successfully sent"
    fi
}

function serv {
    if [ ! "$cmd" ] || tint "$cmd"; then
        page
        return
    fi
    case "$cmd" in
        'm')
            comp ;;
        't')
            dir="$maildir/tmp" 
            cd "$dir"
            list ;;
        'i')
            dir="$maildir/new" 
            cd "$dir"
            list ;;
        'o')
            dir="$maildir/out" 
            cd "$dir"
            list ;;
        'c')
            dir="$maildir/cur" 
            cd "$dir"
            list ;;
        'l')
            cd "$dir"
            list ;;
        'd')
            dlte ;;
        'e')
            # TODO edit
            ;;
        'p')
            # TODO pipe
            ;;
        'n')
            mpop ;;
        'w')
            send ;;
        's')
            # TODO save
            ;;
        'r')
            # TODO reply
            ;;
        'f')
            # TODO forward
            ;;
        'h')
            # TODO syntax help
            ;;
        'v')
            printf '%s\n' 'edmail version 0.0.0' ;;
        'q')
            mv "$maildir/new"/* "$maildir/cur" 2>'/dev/null'
            exit 0 ;;
        'Q')
            exit 0 ;;
        '?')
            man edmail ;;
        '!'*)
            eval "${cmd:1} $args" ;;
        *)
            printf '?\n' ;;
    esac
}

function main {
    source "$HOME/.edmailrc"
    cmd='i'; serv
    while true; do
        printf '& '
        read cmd args
        serv
    done
}

main

